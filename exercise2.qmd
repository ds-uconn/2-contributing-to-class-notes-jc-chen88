---
title: "Exercise 2"
author: "Jingang Chen"
toc: true
number-sections: true
highlight-style: pygments
format: 
  html: 
    code-fold: true
    html-math-method: katex
    embed-resources: true
    self-contained-math: true
  pdf: 
    geometry: 
      - top=30mm
      - left=20mm
##  docx: Never, unless to accommodate a collaborator
---

## Why is the command line interface if preferred among the professionals?

The command line interface (CLI)is preferred in the professional workspace because of its efficency and flexibility that the graphical user interface (GUI) lacks. With the CLI, you can create scripts to automate mudane tasks for the computer, and it is easier to customize your environment to suit the user's needs. Using the command line is also very useful when it comes to troubleshooting and system maintenance tasks. Unlike the GUI, the CLI allows access to systems logs to diagnose issues and perform maintenance activities effectively. For programming, development tools like Git and Vim are also very useful for project managment and keeping track of code.

## What are the advantages of Linux over Windows?

For starters, one advantage that Linux has over Windows is that it is an open-source project, so users can freely modify and tailor the operating systems to their needs, while Windows is more restricted. Linux is also known to be less vulnerable to malware and viruses due to its handling of package management and repositories, which is good for critical work and development. With its support of a wide range of programming languages, Linux is overall the preferred system for developers and even casual users.

## What are the differences between binary and source files?

Binary files contain machine-readable code, usually in the format of 0s and 1s, that taken from the computer's processor, while the source files has human-friendly readable code. Binary code is executed directly by the computer while the source code is translated into binary code before the execution. Examples of binary code include machine language and assembly, while source code is languages like C++ and Python.

## Why do we not want to track binary files in a repo?

Binary files are usually not tracked in a repo for several reasons. Git is usually optimized for text-based files because it can show line by line differences of when changes are made. Because binary files are hard to read, it's hard to actually track the changes made, as even a tiny cahnge can make the file appear totally different to Git. Because small changes generates a new copy of the binary file, keeping track of the changes can significantly increase repository size and make commits/cloning much slower.

##