---
title: "Exercise 3"
author: "Jingang Chen"
toc: true
number-sections: true
highlight-style: pygments
format: 
  html: 
    code-fold: true
    html-math-method: katex
    embed-resources: true
    self-contained-math: true	
  pdf: 
    geometry: 
      - top=30mm
      - left=20mm
##  docx: Never, unless to accommodate a collaborator
---

## Creating a fork of the notes repo into my GitHub account.

Forking is creating a copy of a repository which allows the user to freely
experiment with changes without affecting the original project. To do this,
simply click the "fork" button on the top right corner of the ids-f25 repo and
a copy of it will appear in the user's own Github account.

## Cloning the fork to an appropriate folder on your computer.

The following command in Git Bash was used to clone the fork so that a copy
of it can be worked on locally. Make sure to select the desired folder in 
the commad line before performing this command:

`git clone git@github.com:user_name/ids-f25.git`

## Rendering the classnotes on your computer.

Once the repository is cloned locally, the next step is rendering it to see
the output. An obstacle that comes with this is that the packages required
for quarto to render may not be installed. To navigate this, first create
a virtual enviornment in Git Bash using this command:

`python -m venv venv`

Then to activate it, use:

`source venv/Scripts/activate`

Once the virtual enviornment is activated, use this command to install
all the packages that is listed in requirements.txt in this repo:

`pip install -r requirements.txt`

Once all the packages are installed the repo can finally be rendered
using this command:

`quarto render`

Upon running it for the first time, it will take a bit for all of the qmd files to render
To render a certain file, make sure to add the file name to the command above.

## Making a new branch to experiment with your changes.

To create a new branch, input this command:

`git branch new-branch-name`

This new branch will allow you to safely experiment without breaking anything 
important from the main branch and overall maintain a clean, stable project.

To check the branches created, simply input `git branch`.